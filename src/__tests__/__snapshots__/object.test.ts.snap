// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`v(object) 00. v({}) 1`] = `
Object {
  "_": "function (v) { return v != null; }",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 01. v({ a: null }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a !== null) return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 02. v({ a: undefined }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a !== undefined) return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 03. v({ a: NaN }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (!Number.isNaN(value.a)) return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 04. v({ a: 42 }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a !== 42) return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 05. v({ a: "true" }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a !== \\"true\\") return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 06. v({ a: "false" }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a !== \\"false\\") return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 07. v({ a: "test" }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a !== \\"test\\") return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 08. v({ a: Symbol.for("test") }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a !== validator['constant-0']) return false
  return true
}",
  "constant-0": Symbol(test),
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 09. v({ a: true }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a !== true) return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 10. v({ a: false }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a !== false) return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 11. v({ a: funcWithPrepare }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (!(typeof value.a === 'number' && value.a % validator.divider === 0)) return false
  return true
}",
  "divider": 2,
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 12. v({ a: funcWithoutPrepare }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (!(typeof value.a === 'number' && value.a % 2 === 0)) return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 13. v({ a: funcWithHandle }) 1`] = `
Object {
  "_": "function validator(value) {
  validator.explanations = []
  if (value == null) return false
  if ((typeof value.a !== 'number' || value.a % 2 !== 0)) {
    validator.explanations.push(value.a)
    return false
  }
  return true
}",
  "explanations": Array [],
  "pure": false,
}
`;

exports[`v(object) 15. v({ a: { b: pureFunc } }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a == null) return false
  if (!(typeof value.a.b === 'number' && value.a.b % 2 === 0)) return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 16. v({ a: { b: impureFunc } }) 1`] = `
Object {
  "_": "function validator(value) {
  validator.explanations = []
  if (value == null) return false
  if (value.a == null) return false
  if ((typeof value.a.b !== 'number' || value.a.b % 2 !== 0)) {
    validator.explanations.push(value.a.b)
    return false
  }
  return true
}",
  "explanations": Array [],
  "pure": false,
}
`;

exports[`v(object) 17. v({ a: { b: pureFunc }, c: pureFunc }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a == null) return false
  if (!(typeof value.a.b === 'number' && value.a.b % 2 === 0)) return false
  if (!(typeof value.c === 'number' && value.c % 2 === 0)) return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 18. v({ a: { b: impureFunc }, c: pureFunc }) 1`] = `
Object {
  "_": "function validator(value) {
  validator.explanations = []
  if (value == null) return false
  if (value.a == null) return false
  if ((typeof value.a.b !== 'number' || value.a.b % 2 !== 0)) {
    validator.explanations.push(value.a.b)
    return false
  }
  if (!(typeof value.c === 'number' && value.c % 2 === 0)) return false
  return true
}",
  "explanations": Array [],
  "pure": false,
}
`;

exports[`v(object) 19. v({ a: { b: pureFunc }, c: impureFunc }) 1`] = `
Object {
  "_": "function validator(value) {
  validator.explanations = []
  if (value == null) return false
  if (value.a == null) return false
  if (!(typeof value.a.b === 'number' && value.a.b % 2 === 0)) return false
  if ((typeof value.c !== 'number' || value.c % 2 !== 0)) {
    validator.explanations.push(value.c)
    return false
  }
  return true
}",
  "explanations": Array [],
  "pure": false,
}
`;

exports[`v(object) 20. v({ a: { b: impureFunc }, c: impureFunc }) 1`] = `
Object {
  "_": "function validator(value) {
  validator.explanations = []
  if (value == null) return false
  if (value.a == null) return false
  if ((typeof value.a.b !== 'number' || value.a.b % 2 !== 0)) {
    validator.explanations.push(value.a.b)
    return false
  }
  if ((typeof value.c !== 'number' || value.c % 2 !== 0)) {
    validator.explanations.push(value.c)
    return false
  }
  return true
}",
  "explanations": Array [],
  "pure": false,
}
`;

exports[`v(object) 21. v({ a: { b: 42 }}) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a == null) return false
  if (value.a.b !== 42) return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 22. v({ a: { b: 42, c: pureFunc }}) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a == null) return false
  if (value.a.b !== 42) return false
  if ((typeof value.a.c !== 'number' || value.a.c % 2 !== 0)) return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 23. v({ a: { b: 42, c: impureFunc }}) 1`] = `
Object {
  "_": "function validator(value) {
  validator.explanations = []
  if (value == null) return false
  if (value.a == null) return false
  if (value.a.b !== 42) return false
  if ((typeof value.a.c !== 'number' || value.a.c % 2 !== 0)) {
    validator.explanations.push(value.a.c)
    return false
  }
  return true
}",
  "explanations": Array [],
  "pure": false,
}
`;

exports[`v(object) 24. v({ a: { b: 42, [v.rest]: pureFunc }}) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a == null) return false
  if (value.a.b !== 42) return false
  if (value.a == null) return false
  validator['keys-0'] = Object.keys(value.a)
  for (let i = 0; i < validator['keys-0'].length; i++) {
    validator['key-0'] = validator['keys-0'][i]
    if (validator['omit-keys-0'][validator['key-0']] === true) continue
    validator['elem-0'] = value.a[validator['key-0']]
    if ((typeof validator['elem-0'] !== 'number' || validator['elem-0'] % 2 !== 0)) return false
  }
              
  return true
}",
  "elem-0": undefined,
  "explanations": Array [],
  "key-0": undefined,
  "keys-0": Array [],
  "omit-keys-0": Object {
    "b": true,
  },
  "pure": true,
}
`;

exports[`v(object) 25. v({ a: { b: 42, [v.rest]: impureFunc }}) 1`] = `
Object {
  "_": "function validator(value) {
  validator.explanations = []
  if (value == null) return false
  if (value.a == null) return false
  if (value.a.b !== 42) return false
  if (value.a == null) return false
  validator['keys-1'] = Object.keys(value.a)
  for (let i = 0; i < validator['keys-1'].length; i++) {
    validator['key-1'] = validator['keys-1'][i]
    if (validator['omit-keys-1'][validator['key-1']] === true) continue
    validator['elem-1'] = value.a[validator['key-1']]
    if ((typeof validator['elem-1'] !== 'number' || validator['elem-1'] % 2 !== 0)) {
      validator.explanations.push(validator['elem-1'])
      return false
    }
  }
              
  return true
}",
  "elem-1": undefined,
  "explanations": Array [],
  "key-1": undefined,
  "keys-1": Array [],
  "omit-keys-1": Object {
    "b": true,
  },
  "pure": false,
}
`;

exports[`v(object) 26. v({ a: [] }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 27. v({ a: [42] }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a !== 42) return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v(object) 28. v({ a: [pureFunc, pureFunc] }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (!validator['value.a-0'](value.a)) return false
  return true
}",
  "explanations": Array [],
  "pure": true,
  "value.a-0": "function validator(value) {
  if (typeof value === 'string') return true;
  if (typeof value === 'number' && value % 2 === 0) return true;
  return false
}",
  "value.a-0.explanations": Array [],
  "value.a-0.pure": true,
}
`;

exports[`v(object) 29. v({ a: [impureFunc, pureFunc] }) 1`] = `
Object {
  "_": "function validator(value) {
  validator.explanations = []
  if (value == null) return false
  if (!validator['value.a-1'](value.a)) {
    validator.explanations.push(...validator['value.a-1'].explanations)
    return false
  }
  return true
}",
  "explanations": Array [],
  "pure": false,
  "value.a-1": "function validator(value) {
  validator.explanations = []
  if (typeof value === 'number' && value % 2 === 0) return true;
  if (typeof value === 'string') return true;
  validator.explanations.push(value)
  return false
}",
  "value.a-1.explanations": Array [],
  "value.a-1.pure": false,
}
`;

exports[`v(object) 30. v({ a: 41, b: 42 }) 1`] = `
Object {
  "_": "function validator(value) {
  if (value == null) return false
  if (value.a !== 41) return false
  if (value.b !== 42) return false
  return true
}",
  "explanations": Array [],
  "pure": true,
}
`;
