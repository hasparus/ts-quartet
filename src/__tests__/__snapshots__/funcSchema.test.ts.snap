// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`funcSchema all func schemas 1`] = `
Object {
  "_": "function validator(value) {
  return typeof value === 'number' && value % 2 === 0
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`funcSchema all func schemas 2`] = `
Object {
  "_": "function validator(value) {
  return typeof value === 'number' && value % 2 === 0
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`funcSchema all func schemas 3`] = `
Object {
  "_": "function validator(value) {
  validator.explanations = []
  if (typeof value === 'number' && value % 2 === 0) {
    return true
  }
  validator.explanations.push(value)
  return false
}",
  "explanations": Array [],
  "pure": false,
}
`;

exports[`funcSchema all func schemas 4`] = `
Object {
  "_": "function validator(value) {
  validator.explanations = []
  if (typeof value === 'number' && value % 2 === 0) {
    return true
  }
  validator.explanations.push(value)
  return false
}",
  "explanations": Array [],
  "pure": false,
}
`;

exports[`funcSchema all func schemas 5`] = `
Object {
  "_": "function validator(value) {
  return typeof value === 'number' && value % validator.divider === 0
}",
  "divider": 2,
  "explanations": Array [],
  "pure": true,
}
`;

exports[`funcSchema all func schemas 6`] = `
Object {
  "_": "function validator(value) {
  return typeof value === 'number' && value % validator.divider === 0
}",
  "divider": 2,
  "explanations": Array [],
  "pure": true,
}
`;

exports[`funcSchema all func schemas 7`] = `
Object {
  "_": "function validator(value) {
  validator.explanations = []
  if (typeof value === 'number' && value % validator.divider === 0) {
    return true
  }
  validator.explanations.push(value)
  return false
}",
  "divider": 2,
  "explanations": Array [],
  "pure": false,
}
`;

exports[`funcSchema all func schemas 8`] = `
Object {
  "_": "function validator(value) {
  validator.explanations = []
  if (typeof value === 'number' && value % validator.divider === 0) {
    return true
  }
  validator.explanations.push(value)
  return false
}",
  "divider": 2,
  "explanations": Array [],
  "pure": false,
}
`;
