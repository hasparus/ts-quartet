// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`v.not 00. v.not(undefined) 1`] = `
Object {
  "_": "function validator(value) {
  return value !== undefined
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v.not 01. v.not(null) 1`] = `
Object {
  "_": "function validator(value) {
  return value !== null
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v.not 02. v.not(NaN) 1`] = `
Object {
  "_": "function validator(value) {
  return !Number.isNaN(value)
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v.not 03. v.not(42) 1`] = `
Object {
  "_": "function validator(value) {
  return value !== 42
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v.not 04. v.not(true) 1`] = `
Object {
  "_": "function validator(value) {
  return value !== true
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v.not 05. v.not(false) 1`] = `
Object {
  "_": "function validator(value) {
  return value !== false
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v.not 06. v.not(Symbol.for("test")) 1`] = `
Object {
  "_": "function validator(value) {
  return value !== validator['constant-0']
}",
  "constant-0": Symbol(test),
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v.not 07. v.not("test") 1`] = `
Object {
  "_": "function validator(value) {
  return value !== \\"test\\"
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v.not 08. v.not(funcWithNot) 1`] = `
Object {
  "_": "function validator(value) {
  return (typeof value !== 'number' || value % 2 !== 0)
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v.not 09. v.not(funcWithoutNot) 1`] = `
Object {
  "_": "function validator(value) {
  return !(typeof value === 'number' && value % 2 === 0)
}",
  "explanations": Array [],
  "pure": true,
}
`;

exports[`v.not 10. v.not({ a: 42 }) 1`] = `
Object {
  "_": "function validator(value) {
  return !validator['not-0'](value)
}",
  "explanations": Array [],
  "not-0": "function validator(value) {
  if (value == null) return false
  if (value.a !== 42) return false
  return true
}",
  "not-0.explanations": Array [],
  "not-0.pure": true,
  "pure": true,
}
`;
